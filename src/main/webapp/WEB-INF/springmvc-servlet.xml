<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"  
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:c="http://www.springframework.org/schema/c"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd    
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd    
            http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd    
            http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
            http://www.springframework.org/schema/aop  http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
            http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">

	<!-- 对web包中的所有类进行扫描，以完成Bean创建和自动依赖注入的功能 -->
	<context:component-scan base-package="hxk" />
	
	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->    
	<bean class ="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" ></bean>
	
	
   	<!--  
	  - Jedis ConnectionFactory  最简单的默认127.0.0.1:6379端口配置 
	 <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"/>
	 
   		- 设置IP和端口的配置
   		<bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" >
   			<property name="host-name" value="127.0.0.1"></property>
   			<property name="port" value="6379"></property>
   		</bean>
   	-->
   	
   	<!-- ====================设置redis连接相关Begin======================================================== -->
	  <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">  
	        <property name="maxIdle" value="6"></property>  
	        <property name="maxWaitMillis" value="15000"></property>  
	        <property name="minEvictableIdleTimeMillis" value="300000"></property>  
	        <property name="numTestsPerEvictionRun" value="3"></property>  
	        <property name="timeBetweenEvictionRunsMillis" value="60000"></property>  
	   </bean>  
   	
   	  <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" destroy-method="destroy">  
        <property name="poolConfig" ref="jedisPoolConfig"></property>  
        <property name="hostName" value="127.0.0.1"></property>  
        <property name="port" value="6379"></property>  
       <!--  <property name="password" value="0123456"></property>   -->
        <property name="timeout" value="15000"></property>  
        <property name="usePool" value="true"></property>  
    </bean>  
   	
   	
   	
    
    <!-- template  -->
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">  
        <property name="connectionFactory" ref="jedisConnectionFactory" /> 
        <property name="keySerializer">  
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>  
        </property> 
        <property name="valueSerializer">  
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>  
        </property> 
        <!--设置这个template是否支持事务  -->
       <!--  <property name="enableTransactionSupport" value="true" />  -->
    </bean>  
    
    
   	<!-- =====================设置redis连接相关End======================================================= -->
    
    
    
    
    
  <!--===================================配置Cache缓存Begin=====================  -->
  <!-- turn on declarative caching -->
  <cache:annotation-driven />

  <!-- declare Redis Cache Manager -->
  <bean id="cacheManager" class="org.springframework.data.redis.cache.RedisCacheManager" >
  	<constructor-arg ref="redisTemplate" />
  </bean>
  <!--===================================配置Cache缓存End=====================  -->  
  
</beans>
